{"version":3,"sources":["context/RecipesAppContext.js","components/Footer.jsx","images/blackHeartIcon.svg","images/profileIcon.svg","images/whiteHeartIcon.svg","components/HeaderWithSearchFood.jsx","images/shareIcon.svg","images/searchIcon.svg","images/loading.gif","components/FoodCategoryButtons.jsx","components/HeaderWithSearchDrink.jsx","components/DrinkCategoryButtons.jsx","images/rockGlass.svg","pages/Food.jsx","components/SearchBarFood.jsx","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","components/FoodCards.jsx","components/MainFoodCards.jsx","components/FoodFilteredByIngredient.jsx","pages/Drink.jsx","components/SearchBarDrink.jsx","components/DrinkCards.jsx","components/MainDrinkCards.jsx","components/DrinkFilteredByIngredient.jsx","Redux/Reducer/login.js","Redux/Reducer/index.js","Redux/Store/index.js","context/RecipesAppProvider.js","Redux/Actions/index.js","pages/Login.jsx","components/Header.jsx","pages/Explore.jsx","pages/ExploreFood.jsx","pages/ExploreDrink.jsx","components/CopyButton.jsx","services/utilities.jsx","components/FoodFavoriteButton.jsx","pages/FoodDetails.jsx","components/DrinkFavoriteButton.jsx","pages/DrinkDetails.jsx","pages/FoodInProgress.jsx","pages/DrinkInProgress.jsx","pages/ExploreFoodByIngredient.jsx","pages/ExploreDrinkByIngredient.jsx","pages/ExploreFoodByOrigin.jsx","pages/Profile.jsx","pages/DoneRecipes.jsx","mini-components/FavScreenRemoveButton.jsx","mini-components/FavScreenCopyButton.jsx","pages/FavoriteRecipes.jsx","pages/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["RecipesAppContext","createContext","Footer","history","useHistory","className","data-testid","variant","type","onClick","push","src","DrinkLogo","alt","ExploreLogo","FoodLogo","module","exports","HeaderWithSearchFood","titlePage","useState","toggleInput","setToggleInput","style","padding","profileIcon","searchIcon","FoodCategoryButtons","useContext","categories","setCategories","selectedCategory","setSelectedCategory","useEffect","fetch","then","resp","json","meals","handleClickCategories","category","undefined","console","log","map","catego","index","strCategory","key","HeaderWithSearchDrink","DrinkCategoryButtons","drinkCategories","setDrinkCategories","selecteDrinkCategory","setSelectedDrinkCategory","drinks","handleClickCategory","Food","filteredFoods","selectedFoodIngredient","global","alert","length","SearchBarFood","inputValue","setInputValue","radioValue","setRadioValue","setFilteredFoods","handleRadioInput","target","value","to","meal","idMeal","name","placeholder","onChange","htmlFor","response","result","FoodCards","width","Body","Title","strMeal","Header","Img","strMealThumb","MainFoodCards","foods","setFoods","filteredCategories","setFilteredCategories","currentFood","food","FoodFilteredByIngredient","foodIngredients","setFoodIngredients","Fragment","Drink","filteredDrinks","selectedDrinkIngredient","SearchBarDrink","setFilteredDrinks","drink","idDrink","DrinkCards","strDrink","strDrinkThumb","MainDrinkCards","setDrinks","filteredDrinkCategories","setFilteredDrinkCategories","selectedDrinkCategory","DrinkFilteredByIngredient","drinkIngredients","setDrinkIngredients","slice","INITIAL_STATE","email","loginReducer","state","action","payload","rootReducer","combineReducers","store","createStore","composeWithDevTools","window","Cypress","RecipesAppProvider","children","setSelectedFoodIngredient","setSelectedDrinkIngredient","foodOrigins","setFoodOrigins","selectedFoodOrigin","setSelectedFoodOrigin","mealsByOrigin","setMealsByOrigin","memoizedHandleFetchFoodIngredients","useCallback","memoizedHandleFetchDrinkIngredients","memoizedHandleFetchFoodOrigins","strArea","contextValue","Provider","LoginAction","connect","dispatch","loginEmail","setNewEmail","password","setNewPassword","disabled","setDisable","testEmail","test","testPassword","handleDisable","Form","data","rockGlass","Group","controlId","Control","id","Button","localStorage","setItem","JSON","stringify","Explore","ButtonGroup","vertical","ExploreFood","a","fetchRandomMeal","ExploreDrink","fetchRandomDrink","CopyButton","copiedUrl","setCopiedUrl","copiedUrlMessage","navigator","clipboard","writeText","location","href","setTimeout","shareIcon","localFavorite","parse","getItem","favoriteTable","foodsPlusDrinks","getFavoritesList","recipeInfo","area","alcoholicOrNot","image","newFavoriteRecipes","isLocalFavorite","localIsFavorite","setIsFavorite","currentId","some","savedRecipe","FavoriteButton","foodDetails","setFoodDetails","isFavorite","clickOn","setClickOn","useParams","fetchMeal","useMemo","loading","foodInfo","recipeOnStorage","updateStorage","forEach","recipe","indexOf","splice","reload","blackHeartIcon","whiteHeartIcon","FoodDetails","recommendedDrinks","setRecommendedDrinks","values","measures","fetchRecommended","Object","keys","includes","ingredientNumber","split","measure","youtubeUrl","strYoutube","replace","height","ingredient","strInstructions","frameBorder","title","allowFullScreen","ng-show","recommendations","drinkDetails","setDrinkDetails","fetchDrinks","drinkInfo","strAlcoholic","DrinkDetails","recommendedFoods","setRecommendedFoods","FoodInProgress","FoodProgress","setFoodProgress","defaultChecked","checked","DrinkInProgress","drinkProgress","setDrinkProgress","ExploreFoodByIngredient","strIngredient","ExploreDrinkByIngredient","strIngredient1","ExploreFoodByOrigin","event","Profile","setEmail","clear","DoneRecipes","testIndex","origin","FavoriteRecipes","filterButton","setFilterButton","NotFound","App","basename","process","exact","path","component","Login","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09154c79.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst RecipesAppContext = createContext();\n\nexport default RecipesAppContext;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom'; // última alteração\nimport { Button } from 'react-bootstrap';\nimport DrinkLogo from '../images/drinkIcon.svg';\nimport ExploreLogo from '../images/exploreIcon.svg';\nimport FoodLogo from '../images/mealIcon.svg';\n// import './Footer.css';\n\nfunction Footer() {\n  const history = useHistory();\n\n  return (\n    <footer className=\"container-footer\">\n      <div data-testid=\"footer\" className=\"footer d-flex justify-content-md-center\">\n        <Button\n          variant=\"dark\"\n          type=\"button\"\n          onClick={ () => history.push('/bebidas') }\n        >\n          <img\n            src={ DrinkLogo }\n            alt=\"drinks_logo\"\n            data-testid=\"drinks-bottom-btn\"\n          />\n        </Button>\n        <Button\n          variant=\"dark\"\n          type=\"button\"\n          onClick={ () => history.push('/explorar') }\n        >\n          <img\n            src={ ExploreLogo }\n            alt=\"explore_logo\"\n            data-testid=\"explore-bottom-btn\"\n          />\n        </Button>\n        <Button\n          variant=\"dark\"\n          type=\"button\"\n          onClick={ () => history.push('/comidas') }\n        >\n          <img src={ FoodLogo } alt=\"food_logo\" data-testid=\"food-bottom-btn\" />\n        </Button>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBarFood from './SearchBarFood';\nimport './Header.css';\n\nfunction HeaderWithSearchFood({ titlePage }) {\n  const [toggleInput, setToggleInput] = useState(false);\n  const history = useHistory();\n\n  return (\n    <div className=\"container-header\">\n      <Button\n        style={ { padding: '10px' } }\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={ () => history.push('/perfil') }\n      >\n        <img src={ profileIcon } alt=\"Icone de Perfil\" data-testid=\"profile-top-btn\" />\n      </Button>\n      <div>\n        <h2 data-testid=\"page-title\">{ titlePage }</h2>\n      </div>\n      <div>\n        {toggleInput && (\n          <SearchBarFood />\n        )}\n        <Button\n          style={ { padding: '10px' } }\n          variant=\"secondary\"\n          type=\"button\"\n          onClick={ () => setToggleInput(!toggleInput) }\n        >\n          <img src={ searchIcon } alt=\"Ícone pesquisa\" data-testid=\"search-top-btn\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nHeaderWithSearchFood.propTypes = {\n  titlePage: PropTypes.string.isRequired,\n};\n\nexport default HeaderWithSearchFood;\n\n// Pesquisas:\n// https://developer.mozilla.org/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\n// https://reactrouter.com/web/api/Hooks/usehistory\n// https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-interactions.md\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.7500668d.gif\";","import React, { useEffect, useContext } from 'react';\n\nimport { Button, ButtonToolbar } from 'react-bootstrap';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\n// import './CategoryButtons.css';\n\nfunction FoodCategoryButtons() {\n  const { categories, setCategories } = useContext(RecipesAppContext);\n  const { selectedCategory, setSelectedCategory } = useContext(RecipesAppContext);\n\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list')\n      .then((resp) => resp.json())\n      .then((resp) => {\n        setCategories(resp.meals);\n      });\n  }, [setCategories]);\n\n  const handleClickCategories = (category) => {\n    if (selectedCategory !== undefined) {\n      setSelectedCategory(undefined);\n    }\n    setSelectedCategory(category);\n    // console.log(selectedCategory);\n  };\n\n  const five = 5;\n\n  return (\n    <ButtonToolbar className=\"me-2 categories-container\">\n      { console.log('teste') }\n      {/* // Botoes para escolher categoria : */}\n      <Button\n        variant=\"secondary\"\n        className=\"button-categories mb-3\"\n        type=\"button\"\n        onClick={ () => handleClickCategories(undefined) }\n        data-testid=\"All-category-filter\"\n      >\n        All\n      </Button>\n      {\n        categories.map((catego, index) => (\n          index < five\n            ? (\n              <Button\n                variant=\"secondary\"\n                className=\"button-categories mb-3\"\n                data-testid={ `${catego.strCategory}-category-filter` }\n                key={ index }\n                type=\"button\"\n                onClick={ () => handleClickCategories(catego.strCategory) }\n              >\n                {catego.strCategory}\n              </Button>\n            ) : null\n        ))\n      }\n    </ButtonToolbar>\n  );\n}\n\nexport default FoodCategoryButtons;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBarDrink from './SearchBarDrink';\nimport './Header.css';\n\nfunction HeaderWithSearchDrink({ titlePage }) {\n  const [toggleInput, setToggleInput] = useState(false);\n  const history = useHistory();\n\n  return (\n    <div className=\"container-header\">\n\n      <Button\n        style={ { padding: '10px' } }\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={ () => history.push('/perfil') }\n      >\n        <img src={ profileIcon } alt=\"Icone de Perfil\" data-testid=\"profile-top-btn\" />\n      </Button>\n      <div>\n        <h2 data-testid=\"page-title\">{ titlePage }</h2>\n      </div>\n      <div>\n        {toggleInput && (\n          <SearchBarDrink />\n        )}\n        <Button\n          style={ { padding: '10px' } }\n          variant=\"secondary\"\n          type=\"button\"\n          onClick={ () => setToggleInput(!toggleInput) }\n        >\n          <img src={ searchIcon } alt=\"Ícone pesquisa\" data-testid=\"search-top-btn\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\nHeaderWithSearchDrink.propTypes = {\n  titlePage: PropTypes.string.isRequired,\n};\n\nexport default HeaderWithSearchDrink;\n\n// Pesquisas:\n// https://developer.mozilla.org/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\n// https://reactrouter.com/web/api/Hooks/usehistory\n// https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-interactions.md\n","import React, { useEffect, useContext } from 'react';\n\nimport { Button, ButtonToolbar } from 'react-bootstrap';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nimport './CategoryButtons.css';\n\nfunction DrinkCategoryButtons() {\n  const {\n    drinkCategories,\n    setDrinkCategories,\n    selecteDrinkCategory,\n    setSelectedDrinkCategory,\n  } = useContext(RecipesAppContext);\n\n  useEffect(() => {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list')\n      .then((resp) => resp.json())\n      .then((resp) => {\n        setDrinkCategories(resp.drinks);\n      });\n  }, [setDrinkCategories]);\n\n  const handleClickCategory = (category) => {\n    if (selecteDrinkCategory !== undefined) {\n      setSelectedDrinkCategory(undefined);\n    }\n    setSelectedDrinkCategory(category);\n  };\n\n  const five = 5;\n\n  return (\n    <ButtonToolbar className=\"me-2 categories-container\">\n      {/* // Botoes para escolher categoria : */}\n      <Button\n        variant=\"secondary\"\n        className=\"button-categories mb-3\"\n        type=\"button\"\n        onClick={ () => handleClickCategory(undefined) }\n        data-testid=\"All-category-filter\"\n      >\n        All\n      </Button>\n      {\n        drinkCategories.map((catego, index) => (\n          index < five\n            ? (\n              <Button\n                variant=\"secondary\"\n                className=\"button-categories mb-3\"\n                data-testid={ `${catego.strCategory}-category-filter` }\n                key={ index }\n                type=\"button\"\n                onClick={ () => handleClickCategory(catego.strCategory) }\n              >\n                {catego.strCategory}\n              </Button>\n            ) : null\n        ))\n      }\n    </ButtonToolbar>\n  );\n}\n\nexport default DrinkCategoryButtons;\n","module.exports = __webpack_public_path__ + \"static/media/rockGlass.6193f3c0.svg\";","import React, { useContext } from 'react';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport HeaderWithSearchFood from '../components/HeaderWithSearchFood';\nimport Footer from '../components/Footer';\nimport FoodCards from '../components/FoodCards';\nimport FoodCategoryButtons from '../components/FoodCategoryButtons';\nimport MainFoodCards from '../components/MainFoodCards';\nimport FoodFilteredByIngredient from '../components/FoodFilteredByIngredient';\n\nfunction Food() {\n  const {\n    filteredFoods,\n    selectedFoodIngredient,\n  } = useContext(RecipesAppContext);\n\n  if (filteredFoods === null || filteredFoods === undefined) {\n    return global.alert(\n      'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n    );\n  }\n\n  if (filteredFoods.length > 1) {\n    return (<FoodCards />);\n  }\n  if (selectedFoodIngredient === '' || filteredFoods.length > 1) {\n    return (\n      <div className=\"page-main\">\n        <HeaderWithSearchFood titlePage=\"Comidas\" />\n        <div>\n          <FoodCategoryButtons />\n          <MainFoodCards />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"page-main\">\n      <HeaderWithSearchFood titlePage=\"Comidas\" />\n      <div>\n        <FoodCategoryButtons />\n        <FoodFilteredByIngredient />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Food;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nimport './SearchBar.css';\n\n// estado da barra de pesquisa\nfunction SearchBarFood() {\n  const [inputValue, setInputValue] = useState('');\n  const [radioValue, setRadioValue] = useState('');\n  const { filteredFoods, setFilteredFoods } = useContext(RecipesAppContext);\n\n  const handleSearchInput = ({ target }) => {\n    setInputValue(target.value);\n  };\n\n  const handleRadioInput = ({ target }) => {\n    setRadioValue(target.value);\n  };\n\n  useEffect(() => {\n    if (inputValue.length > 1 && radioValue === 'firstLetter') {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }, [inputValue, radioValue]);\n\n  function handleClick() {\n    if (radioValue === 'ingredient') {\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputValue}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredFoods(result.meals));\n    }\n\n    if (radioValue === 'name') {\n      fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${inputValue}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredFoods(result.meals));\n    }\n\n    if (radioValue === 'firstLetter') {\n      fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${inputValue}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredFoods(result.meals));\n    }\n  }\n\n  // if (filteredFoods === null || filteredFoods === undefined) {\n  //   return global.alert(\n  //     'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n  //   );\n  // }\n\n  if (filteredFoods.length === 1) {\n    return (\n      <Redirect to={ `/comidas/${filteredFoods.map((meal) => meal.idMeal)}` } />\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"search-input\">\n        <input\n          data-testid=\"search-input\"\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Buscar Receita\"\n          value={ inputValue }\n          onChange={ handleSearchInput }\n        />\n        <label htmlFor=\"ingredient-search\">\n          <input\n            data-testid=\"ingredient-search-radio\"\n            type=\"radio\"\n            name=\"radioSelect\"\n            value=\"ingredient\"\n            onChange={ handleRadioInput }\n          />\n          Ingredientes\n        </label>\n        <label htmlFor=\"name-search\">\n          <input\n            data-testid=\"name-search-radio\"\n            type=\"radio\"\n            name=\"radioSelect\"\n            value=\"name\"\n            onChange={ handleRadioInput }\n          />\n          Nome\n        </label>\n        <label htmlFor=\"first-letter-search\">\n          <input\n            data-testid=\"first-letter-search-radio\"\n            type=\"radio\"\n            name=\"radioSelect\"\n            value=\"firstLetter\"\n            onChange={ handleRadioInput }\n          />\n          Primeira letra\n        </label>\n        <div className=\"search-button\">\n          <button\n            data-testid=\"exec-search-btn\"\n            type=\"button\"\n            onClick={ handleClick }\n          >\n            Buscar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBarFood;\n\n// // Pesquisas:\n// // https://github.com/tryber/sd-013-b-project-recipes-app/blob/main-group-9-searchHeader/src/components/SearchInput.js\n// // https://eslint.org/docs/rules/no-unused-vars\n","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","import React, { useContext } from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction FoodCards() {\n  const maxCardsLength = 12;\n  const { filteredFoods } = useContext(RecipesAppContext);\n\n  return (\n    <div>\n      {filteredFoods.map((meal, index) => (\n        (index < maxCardsLength) && (\n          <Card key={ index } style={ { width: '18rem' } }>\n            <Card.Body>\n              <Card.Title\n                data-testid={ `${index}-card-name` }\n              >\n                { meal.strMeal }\n              </Card.Title>\n            </Card.Body>\n            <Card.Header data-testid={ `${index}-recipe-card` }>\n              <Card.Img\n                src={ meal.strMealThumb }\n                alt={ meal.strMeal }\n                data-testid={ `${index}-card-img` }\n                width=\"100px\"\n                variant=\"top\"\n              />\n            </Card.Header>\n          </Card>\n        )\n      ))}\n    </div>\n  );\n}\n\nexport default FoodCards;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction MainFoodCards() {\n  const {\n    foods,\n    setFoods,\n    filteredCategories,\n    selectedCategory,\n    setFilteredCategories,\n  } = useContext(RecipesAppContext);\n  console.log(selectedCategory);\n\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n      .then((resp) => resp.json())\n      .then((resp) => setFoods(resp.meals));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (selectedCategory !== undefined) {\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${selectedCategory}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredCategories(result.meals));\n    }\n    console.log(filteredCategories);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCategory]);\n  // looping corrigido com auxilio do colega Felipe\n\n  if (foods.length === 0) {\n    return <h4>Carregando...</h4>;\n  }\n  const eleven = 11;\n\n  return (\n    <div className=\"list-recipes\">\n      {\n        // Filtro se caso categoria tiver sido selecionada:\n        // atraves do resultado do filter(array novo) faço map e renderizo alimentos da categoria selecionada\n        selectedCategory !== undefined ? (\n          filteredCategories\n            .map((currentFood, index) => (\n              index <= eleven\n                ? (\n                  <Link to={ `/comidas/${currentFood.idMeal}` }>\n                    <div\n                      className=\"card-food\"\n                      key={ currentFood.strMeal }\n                      data-testid={ `${index}-recipe-card` }\n                    >\n                      <img\n                        src={ currentFood.strMealThumb }\n                        alt=\"receita  \"\n                        width=\"100px\"\n                        data-testid={ `${index}-card-img` }\n                      />\n                      <p // Lint reclamou da quantidade caractereres, por isso mudei de linha\n                        data-testid={ `${index}-card-name` }\n                      >\n                        { currentFood.strMeal }\n                      </p>\n                      <p data-testid={ `${selectedCategory}-category-filter` } />\n                    </div>\n                  </Link>\n                ) : null\n            ))\n        ) // se Categoria tiver undefined (nao selecionada) retorno map de receitas totais (12 da api)\n          : foods.map((food, index) => (\n            index <= eleven\n              ? (\n                <Link to={ `/comidas/${food.idMeal}` }>\n                  <div\n                    className=\"card-food\"\n                    key={ index }\n                    data-testid={ `${index}-recipe-card` }\n                  >\n                    <img\n                      src={ food.strMealThumb }\n                      alt=\"receita  \"\n                      width=\"100px\"\n                      data-testid={ `${index}-card-img` }\n                    />\n                    <p data-testid={ `${index}-card-name` }>{ food.strMeal }</p>\n                  </div>\n\n                </Link>\n              ) : null\n          ))\n      }\n    </div>\n  );\n}\n\nexport default MainFoodCards;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction FoodFilteredByIngredient() {\n  const {\n    selectedFoodIngredient,\n    foodIngredients,\n    setFoodIngredients,\n  } = useContext(RecipesAppContext);\n\n  useEffect(() => {\n    fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${selectedFoodIngredient}`).then((response) => response.json()).then((result) => setFoodIngredients(result.meals));\n  }, [selectedFoodIngredient, setFoodIngredients]);\n\n  return (\n    foodIngredients.map((food, index) => (\n      <React.Fragment key={ food.idMeal }>\n        <Link to={ `/comidas/${food.idMeal}` }>\n          <div\n            className=\"card-food\"\n            data-testid={ `${index}-recipe-card` }\n          >\n            <img\n              src={ food.strMealThumb }\n              alt=\"receita  \"\n              width=\"100px\"\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-card-name` }>{ food.strMeal }</p>\n          </div>\n        </Link>\n        <Footer />\n      </React.Fragment>\n    )));\n}\n\nexport default FoodFilteredByIngredient;\n","import React, { useContext } from 'react';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nimport HeaderWithSearchDrink from '../components/HeaderWithSearchDrink';\nimport Footer from '../components/Footer';\nimport DrinkCards from '../components/DrinkCards';\nimport DrinkCategoryButtons from '../components/DrinkCategoryButtons';\nimport MainDrinkCards from '../components/MainDrinkCards';\nimport DrinkFilteredByIngredient from '../components/DrinkFilteredByIngredient';\n\nfunction Drink() {\n  const {\n    filteredDrinks,\n    selectedDrinkIngredient,\n  } = useContext(RecipesAppContext);\n\n  if (filteredDrinks === null || filteredDrinks === undefined) {\n    return global.alert(\n      'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n    );\n  }\n\n  if (filteredDrinks.length > 1) {\n    return (<DrinkCards />);\n  }\n\n  if (selectedDrinkIngredient === '' || filteredDrinks.length > 1) {\n    return (\n      <div className=\"page-main\">\n        <HeaderWithSearchDrink titlePage=\"Bebidas\" />\n        <DrinkCategoryButtons />\n        <MainDrinkCards />\n        <Footer />\n      </div>\n    );\n  }\n  return (\n    <div className=\"page-main\">\n      <HeaderWithSearchDrink titlePage=\"Bebidas\" />\n      <p>Tela principal de Receitas:</p>\n      <DrinkCategoryButtons />\n      <DrinkFilteredByIngredient />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Drink;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nimport './SearchBar.css';\n\n// estado da barra de pesquisa\nfunction SearchBarDrink() {\n  const [inputValue, setInputValue] = useState('');\n  const [radioValue, setRadioValue] = useState('');\n  const { filteredDrinks, setFilteredDrinks } = useContext(RecipesAppContext);\n\n  const handleSearchInput = ({ target }) => {\n    setInputValue(target.value);\n  };\n\n  const handleRadioInput = ({ target }) => {\n    setRadioValue(target.value);\n  };\n\n  useEffect(() => {\n    if (inputValue.length > 1 && radioValue === 'firstLetter') {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n  }, [inputValue, radioValue]);\n\n  function handleClick() {\n    if (radioValue === 'ingredient') {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${inputValue}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredDrinks(result.drinks));\n    }\n\n    if (radioValue === 'name') {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${inputValue}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredDrinks(result.drinks));\n    }\n\n    if (radioValue === 'firstLetter') {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${inputValue}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredDrinks(result.drinks));\n    }\n  }\n\n  if (filteredDrinks === null || filteredDrinks === undefined) {\n    return global.alert(\n      'Sinto muito, não encontramos nenhuma receita para esses filtros.',\n    );\n  }\n\n  if (filteredDrinks.length === 1) {\n    return (\n      <Redirect to={ `/bebidas/${filteredDrinks.map((drink) => drink.idDrink)}` } />\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"search-input\">\n        <input\n          data-testid=\"search-input\"\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Buscar Receita\"\n          value={ inputValue }\n          onChange={ handleSearchInput }\n        />\n        <label htmlFor=\"ingredient-search\">\n          <input\n            data-testid=\"ingredient-search-radio\"\n            type=\"radio\"\n            name=\"radioSelect\"\n            value=\"ingredient\"\n            onChange={ handleRadioInput }\n          />\n          Ingredientes\n        </label>\n        <label htmlFor=\"name-search\">\n          <input\n            data-testid=\"name-search-radio\"\n            type=\"radio\"\n            name=\"radioSelect\"\n            value=\"name\"\n            onChange={ handleRadioInput }\n          />\n          Nome\n        </label>\n        <label htmlFor=\"first-letter-search\">\n          <input\n            data-testid=\"first-letter-search-radio\"\n            type=\"radio\"\n            name=\"radioSelect\"\n            value=\"firstLetter\"\n            onChange={ handleRadioInput }\n          />\n          Primeira letra\n        </label>\n        <div className=\"search-button\">\n          <button\n            data-testid=\"exec-search-btn\"\n            type=\"button\"\n            onClick={ handleClick }\n          >\n            Buscar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBarDrink;\n\n// Pesquisas:\n// https://github.com/tryber/sd-013-b-project-recipes-app/blob/main-group-9-searchHeader/src/components/SearchInput.js\n// https://eslint.org/docs/rules/no-unused-vars\n","import React, { useContext } from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction DrinkCards() {\n  const maxCardsLength = 12;\n  const { filteredDrinks } = useContext(RecipesAppContext);\n\n  return (\n    <div>\n      {filteredDrinks.map((drink, index) => (\n        (index < maxCardsLength) && (\n          <Card key={ index }>\n            <Card.Body>\n              <Card.Title\n                data-testid={ `${index}-card-name` }\n              >\n                { drink.strDrink }\n              </Card.Title>\n            </Card.Body>\n            <Card.Header data-testid={ `${index}-recipe-card` }>\n              <Card.Img\n                variant=\"top\"\n                src={ drink.strDrinkThumb }\n                alt={ drink.strDrink }\n                data-testid={ `${index}-card-img` }\n                width=\"100px\"\n              />\n            </Card.Header>\n          </Card>\n        )\n      ))}\n    </div>\n  );\n}\n\nexport default DrinkCards;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction MainDrinkCards() {\n  const { drinks,\n    setDrinks,\n    filteredDrinkCategories,\n    setFilteredDrinkCategories,\n    selectedDrinkCategory,\n  } = useContext(RecipesAppContext);\n\n  useEffect(() => {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n      .then((resp) => resp.json())\n      .then((resp) => setDrinks(resp.drinks));\n    console.log(drinks);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (selectedDrinkCategory !== undefined) {\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${selectedDrinkCategory}`)\n        .then((response) => response.json())\n        .then((result) => setFilteredDrinkCategories(result.drinks));\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDrinkCategory]);\n\n  if (drinks.length === 0) {\n    return <h4>Carregando...</h4>;\n  }\n\n  const eleven = 11;\n\n  return (\n    <div className=\"list-recipes\">\n      {\n        // Filtro se caso categoria tiver sido selecionada:\n        // atraves do resultado do filter(array novo) faço map e renderizo alimentos da categoria selecionada:\n        selectedDrinkCategory !== undefined ? (\n          filteredDrinkCategories\n            .map((drink, index) => (\n              index <= eleven\n                ? (\n                  <Link to={ `/bebidas/${drink.idDrink}` }>\n                    <div\n                      className=\"card-drink\"\n                      key={ drink.idDrink }\n                      data-testid={ `${index}-recipe-card` }\n                    >\n\n                      <img\n                        src={ drink.strDrinkThumb }\n                        alt=\"receita  \"\n                        width=\"100px\"\n                        data-testid={ `${index}-card-img` }\n                      />\n                      <p\n                        data-testid={ `${index}-card-name` }\n                      >\n                        { drink.strDrink }\n                      </p>\n                      <p\n                        data-testid={ `${drink.strCategory}-category-filter` }\n                      />\n                    </div>\n                  </Link>\n                ) : null\n            ))\n        ) // se Categoria tiver undefined (nao selecionada) retorno map de receitas totais (12 da api)\n          : drinks.map((drink, index) => (\n            index <= eleven\n              ? (\n                <Link to={ `/bebidas/${drink.idDrink}` }>\n                  <div\n                    className=\"card-drink\"\n                    key={ drink.idDrink }\n                    data-testid={ `${index}-recipe-card` }\n                  >\n                    <img\n                      src={ drink.strDrinkThumb }\n                      alt=\"receita  \"\n                      width=\"100px\"\n                      data-testid={ `${index}-card-img` }\n                    />\n                    <p\n                      data-testid={ `${index}-card-name` }\n                    >\n                      { drink.strDrink }\n\n                    </p>\n                  </div>\n                </Link>\n              ) : null\n          ))\n      }\n    </div>\n  );\n}\n\nexport default MainDrinkCards;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction DrinkFilteredByIngredient() {\n  const {\n    selectedDrinkIngredient,\n    drinkIngredients,\n    setDrinkIngredients,\n  } = useContext(RecipesAppContext);\n\n  const doze = 12;\n\n  useEffect(() => {\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${selectedDrinkIngredient}`).then((response) => response.json()).then((result) => setDrinkIngredients(result.drinks));\n  }, [selectedDrinkIngredient, setDrinkIngredients]);\n\n  return (\n    drinkIngredients.slice(0, doze).map((drink, index) => (\n      <React.Fragment key={ drink.idDrink }>\n        <Link to={ `/bebidas/${drink.idDrink}` }>\n          <div\n            className=\"card-drink\"\n            data-testid={ `${index}-recipe-card` }\n          >\n            <img\n              src={ drink.strDrinkThumb }\n              alt=\"receita  \"\n              width=\"100px\"\n              data-testid={ `${index}-card-img` }\n            />\n            <p data-testid={ `${index}-card-name` }>{ drink.strDrink }</p>\n          </div>\n        </Link>\n        <Footer />\n      </React.Fragment>\n\n    )));\n}\n\nexport default DrinkFilteredByIngredient;\n","const LOGIN = 'LOGIN';\n\nexport const INITIAL_STATE = {\n  email: '',\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  const { type, payload } = action;\n  switch (type) {\n  case LOGIN:\n    return {\n      ...state,\n      payload,\n      email: payload.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default loginReducer;\n","import { combineReducers } from 'redux';\nimport loginReducer from './login';\nimport filteredFoods from './filteredFoods';\n\nconst rootReducer = combineReducers({\n  loginReducer,\n  filteredFoods,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../Reducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\n\nfunction RecipesAppProvider({ children }) {\n  const [inputValue, setInputValue] = useState('');\n  const [radioValue, setRadioValue] = useState('');\n  const [filteredFoods, setFilteredFoods] = useState([]);\n  const [filteredDrinks, setFilteredDrinks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(undefined);\n  const [foods, setFoods] = useState([]);\n  const [filteredCategories, setFilteredCategories] = useState([]);\n  const [drinkCategories, setDrinkCategories] = useState([]);\n  const [selectedDrinkCategory, setSelectedDrinkCategory] = useState(undefined);\n  const [drinks, setDrinks] = useState([]);\n  const [filteredDrinkCategories, setFilteredDrinkCategories] = useState([]);\n  const [foodIngredients, setFoodIngredients] = useState([]);\n  const [drinkIngredients, setDrinkIngredients] = useState([]);\n  const [selectedFoodIngredient, setSelectedFoodIngredient] = useState('');\n  const [selectedDrinkIngredient, setSelectedDrinkIngredient] = useState('');\n  const [foodOrigins, setFoodOrigins] = useState([]);\n  const [selectedFoodOrigin, setSelectedFoodOrigin] = useState('American');\n  const [mealsByOrigin, setMealsByOrigin] = useState([]);\n\n  const MAX_INGREDIENTS = 12;\n  const MAX_ORIGINS = 27;\n\n  function handleFetchFoodIngredients() {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\n      .then((response) => response.json())\n      .then((result) => {\n        setFoodIngredients(result.meals.slice(0, MAX_INGREDIENTS));\n      });\n  }\n  const memoizedHandleFetchFoodIngredients = useCallback(\n    () => {\n      handleFetchFoodIngredients();\n    },\n    [],\n  );\n\n  function handleFetchDrinkIngredients() {\n    fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\n      .then((response) => response.json())\n      .then((result) => {\n        setDrinkIngredients(result.drinks.slice(0, MAX_INGREDIENTS));\n      });\n  }\n  const memoizedHandleFetchDrinkIngredients = useCallback(\n    () => {\n      handleFetchDrinkIngredients();\n    },\n    [],\n  );\n\n  function handleFetchFoodOrigins() {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')\n      .then((response) => response.json())\n      .then((result) => {\n        setFoodOrigins(result.meals.map((meal) => meal.strArea).slice(0, MAX_ORIGINS));\n        // setFoodOrigins(result.meals);\n      });\n  }\n  const memoizedHandleFetchFoodOrigins = useCallback(\n    () => {\n      handleFetchFoodOrigins();\n    },\n    [],\n  );\n\n  const contextValue = {\n    inputValue,\n    setInputValue,\n    radioValue,\n    setRadioValue,\n    filteredFoods,\n    setFilteredFoods,\n    filteredDrinks,\n    setFilteredDrinks,\n    categories,\n    setCategories,\n    selectedCategory,\n    setSelectedCategory,\n    foods,\n    setFoods,\n    filteredCategories,\n    setFilteredCategories,\n    drinkCategories,\n    setDrinkCategories,\n    selectedDrinkCategory,\n    setSelectedDrinkCategory,\n    drinks,\n    setDrinks,\n    filteredDrinkCategories,\n    setFilteredDrinkCategories,\n    foodIngredients,\n    setFoodIngredients,\n    selectedFoodIngredient,\n    setSelectedFoodIngredient,\n    drinkIngredients,\n    setDrinkIngredients,\n    selectedDrinkIngredient,\n    setSelectedDrinkIngredient,\n    memoizedHandleFetchFoodIngredients,\n    memoizedHandleFetchDrinkIngredients,\n    foodOrigins,\n    setFoodOrigins,\n    selectedFoodOrigin,\n    setSelectedFoodOrigin,\n    memoizedHandleFetchFoodOrigins,\n    mealsByOrigin,\n    setMealsByOrigin,\n  };\n\n  return (\n    <RecipesAppContext.Provider value={ contextValue }>\n      {children}\n    </RecipesAppContext.Provider>\n  );\n}\nexport default RecipesAppProvider;\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","const LOGIN = 'LOGIN';\n\nconst LoginAction = (email) => (\n  ({\n    type: LOGIN,\n    payload: {\n      email,\n    },\n  })\n);\n\nexport default LoginAction;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport LoginAction from '../Redux/Actions';\nimport rockGlass from '../images/rockGlass.svg';\n\nfunction Login({ loginEmail }) {\n  const [email, setNewEmail] = useState('');\n  const [password, setNewPassword] = useState('');\n  const [disabled, setDisable] = useState(true);\n  const history = useHistory();\n\n  const handleChangeOnEmail = ({ target }) => {\n    setNewEmail(target.value);\n  };\n\n  const handleChangeOnPassWord = ({ target }) => {\n    setNewPassword(target.value);\n  };\n\n  const handleClick = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({\n      email,\n    }));\n    loginEmail(email);\n    history.push('/comidas');\n  };\n\n  useEffect(() => {\n    const handleDisable = () => {\n      const regex = /\\S+@\\S+\\.\\S+/; // Font: https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n      const testEmail = regex.test(email);\n      const minLength = 6;\n      const testPassword = (password.length > minLength);\n      if (testEmail && testPassword) {\n        setDisable(false);\n      } else {\n        setDisable(true);\n      }\n    };\n    handleDisable();\n  }, [email, password]);\n\n  return (\n    <div>\n      <Form className=\"logo-login\">\n        <div className=\"logo-login\">\n          <h4 className=\"logo\">App de receitas</h4>\n          <object\n            className=\"rocksGlass\"\n            type=\"image/svg+xml\"\n            data={ rockGlass }\n          >\n            Glass\n          </object>\n        </div>\n\n        <div className=\"inputs-login\">\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"email\"\n              id=\"login-input\"\n              placeholder=\"Email\"\n              data-testid=\"email-input\"\n              value={ email }\n              onChange={ handleChangeOnEmail }\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              id=\"password-input\"\n              value={ password }\n              onChange={ handleChangeOnPassWord }\n              placeholder=\"Password\"\n              data-testid=\"password-input\"\n            />\n          </Form.Group>\n\n          <Button\n            type=\"submit\"\n            data-testid=\"login-submit-btn\"\n            disabled={ disabled }\n            onClick={ handleClick }\n            variant=\"primary\"\n            className=\"mb-3\"\n          >\n            Entrar\n          </Button>\n        </div>\n\n      </Form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginEmail: (email) => dispatch(LoginAction(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  loginEmail: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport profileIcon from '../images/profileIcon.svg';\nimport './Header.css';\n\nfunction Header({ titlePage }) {\n  const history = useHistory();\n\n  return (\n    <div className=\"container-header\">\n      <div>\n        <h2 data-testid=\"page-title\">{ titlePage }</h2>\n      </div>\n      <Button\n        style={ { padding: '10px' } }\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={ () => history.push('/perfil') }\n      >\n        <img src={ profileIcon } alt=\"Icone de Perfil\" data-testid=\"profile-top-btn\" />\n      </Button>\n    </div>\n  );\n}\nHeader.propTypes = {\n  titlePage: PropTypes.string.isRequired,\n};\n\nexport default Header;\n\n// Pesquisas:\n// https://developer.mozilla.org/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\n// https://reactrouter.com/web/api/Hooks/usehistory\n// https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-interactions.md\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nimport './Explore.css';\n\nfunction Explore() {\n  const history = useHistory();\n\n  return (\n    <div className=\"page-main\">\n      <Header titlePage=\"Explorar\" />\n      <div className=\"container\">\n        <ButtonGroup vertical>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-food\"\n            onClick={ () => history.push('/explorar/comidas') }\n          >\n            Explorar Comidas\n          </Button>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-drinks\"\n            onClick={ () => history.push('/explorar/bebidas') }\n          >\n            Explorar Bebidas\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nimport './ExploreRecipes.css';\n\nfunction ExploreFood() {\n  const history = useHistory();\n\n  async function fetchRandomMeal() {\n    const RANDOM_MEAL_API = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    const response = await fetch(RANDOM_MEAL_API);\n    const result = await response.json();\n    history.push(`/comidas/${result.meals[0].idMeal}`);\n  }\n\n  return (\n    <div>\n      <Header titlePage=\"Explorar Comidas\" />\n      <div className=\"recipe-container\">\n        <ButtonGroup vertical>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            onClick={ () => history.push('/explorar/comidas/ingredientes') }\n          >\n            Por Ingredientes\n          </Button>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-by-area\"\n            onClick={ () => history.push('/explorar/comidas/area') }\n          >\n            Por Local de Origem\n          </Button>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            onClick={ () => fetchRandomMeal() }\n          >\n            Me Surpreenda!\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFood;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nimport Header from '../components/Header';\n\nimport Footer from '../components/Footer';\n\nimport './ExploreRecipes.css';\n\nfunction ExploreDrink() {\n  const history = useHistory();\n\n  async function fetchRandomDrink() {\n    const RANDOM_DRINK_API = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n    const response = await fetch(RANDOM_DRINK_API);\n    const result = await response.json();\n    history.push(`/bebidas/${result.drinks[0].idDrink}`);\n  }\n\n  return (\n    <div>\n      <Header titlePage=\"Explorar Bebidas\" />\n      <div className=\"recipe-container\">\n        <ButtonGroup vertical>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            onClick={ () => history.push('/explorar/bebidas/ingredientes') }\n          >\n            Por Ingredientes\n          </Button>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            onClick={ () => fetchRandomDrink() }\n          >\n            Me Surpreenda!\n          </Button>\n        </ButtonGroup>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrink;\n","import React, { useState } from 'react';\n\nimport { Button } from 'react-bootstrap';\n\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction CopyButton() {\n  const [copiedUrl, setCopiedUrl] = useState(false);\n\n  // No magic Numbers\n  const oneSecondDisplayCopiedLink = 1000;\n\n  const copiedUrlMessage = <p>Link copiado!</p>;\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(window.location.href);\n    setCopiedUrl(true);\n    setTimeout(() => setCopiedUrl(false), oneSecondDisplayCopiedLink);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outline-secondary\"\n        type=\"button\"\n        data-testid=\"share-btn\"\n        onClick={ handleCopy }\n      >\n        <img src={ shareIcon } alt=\"share button\" />\n      </Button>\n      {copiedUrl && copiedUrlMessage}\n    </div>\n  );\n}\n\nexport default CopyButton;\n","export const localFavorite = JSON.parse(localStorage.getItem('favoriteRecipes')) !== null\n  ? JSON.parse(localStorage.getItem('favoriteRecipes')) : [];\n\nlet favoriteTable = [];\n\nexport const drinks = []; // declared global variable\nexport const foods = []; // declared global variable\nexport const foodsPlusDrinks = []; // declared global variable\n\nexport function getFavoritesList(recipeInfo) {\n  favoriteTable = {\n    id: recipeInfo.id,\n    type: recipeInfo.type,\n    area: recipeInfo.area,\n    category: recipeInfo.category,\n    alcoholicOrNot: recipeInfo.alcoholicOrNot,\n    name: recipeInfo.name,\n    image: recipeInfo.image,\n  };\n  console.log('está salvo');\n  const newFavoriteRecipes = [...localFavorite, favoriteTable];\n  localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n}\n\nexport default function isLocalFavorite(\n  localIsFavorite,\n  setIsFavorite,\n  currentId,\n) {\n  if (\n    localIsFavorite === 'true'\n    && localFavorite\n      .some((savedRecipe) => savedRecipe.id === currentId)\n  ) {\n    setIsFavorite(true);\n  } else {\n    setIsFavorite(false);\n  }\n}\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport isLocalFavorite, {\n  getFavoritesList,\n  localFavorite,\n} from '../services/utilities';\n\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport loading from '../images/loading.gif';\n\nfunction FavoriteButton() {\n  const [foodDetails, setFoodDetails] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clickOn, setClickOn] = useState(false);\n\n  const { id } = useParams();\n\n  // Fetch para detalhes de uma receita\n  useEffect(() => {\n    const fetchMeal = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const { meals } = await response.json();\n\n      setFoodDetails(meals);\n    };\n    fetchMeal();\n  }, [id]);\n\n  const localIsFavorite = localStorage.getItem('isFavorite');\n\n  useMemo(() => {\n    isLocalFavorite(\n      localIsFavorite,\n      setIsFavorite,\n      id,\n    );\n  }, [localIsFavorite, id]);\n\n  if ((!foodDetails.length)) {\n    return <img src={ loading } alt=\"loading\" />;\n  }\n\n  const foodInfo = {\n    id: foodDetails[0].idMeal,\n    type: 'comida',\n    area: foodDetails[0].strArea,\n    category: foodDetails[0].strCategory,\n    alcoholicOrNot: '',\n    name: foodDetails[0].strMeal,\n    image: foodDetails[0].strMealThumb,\n  };\n\n  const recipeOnStorage = localFavorite.some((savedRecipe) => savedRecipe.id === id);\n\n  let index = '';\n  let updateStorage = '';\n\n  const handleFavorite = () => {\n    if (recipeOnStorage === false) { // fazer uma lógica usando o some e o map para comparar o id atual com a lista de ids salvos para ver se fica true ou false\n      setIsFavorite(true);\n      localStorage.setItem('isFavorite', !isFavorite);\n      getFavoritesList(foodInfo);\n      setClickOn(false);\n    } else {\n      setIsFavorite(false);\n      localFavorite.forEach((recipe) => {\n        if (recipe.id === id) {\n          index = localFavorite.indexOf(recipe);\n          localFavorite.splice(index, 1);\n          updateStorage = JSON.stringify(localFavorite);\n          localStorage.setItem('favoriteRecipes', updateStorage);\n        }\n        setClickOn(false);\n      });\n    }\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outline-secondary\"\n        type=\"button\"\n        data-testid=\"favorite-btn\"\n        onClick={ handleFavorite }\n        src={\n          recipeOnStorage || clickOn\n            ? blackHeartIcon\n            : whiteHeartIcon\n        }\n      >\n        {\n          recipeOnStorage || clickOn\n            ? <img src={ blackHeartIcon } alt=\"Like button\" />\n            : <img src={ whiteHeartIcon } alt=\"Like button\" />\n        }\n      </Button>\n    </div>\n  );\n}\n\nexport default FavoriteButton;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport CopyButton from '../components/CopyButton';\nimport FavoriteButton from '../components/FoodFavoriteButton';\n\nimport './RecipeDetails.css';\n\nfunction FoodDetails() {\n  const [foodDetails, setFoodDetails] = useState([]);\n  const [recommendedDrinks, setRecommendedDrinks] = useState([]);\n\n  // No magic Numbers\n  const firstSixRecommendedCards = 6;\n\n  const values = []; // usar na renderização de ingredientes\n  const measures = []; // usar na renderização de medidas dos ingredientes\n\n  const { id } = useParams();\n\n  // Fetch para detalhes de uma receita\n  useEffect(() => {\n    const fetchMeal = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const { meals } = await response.json();\n\n      setFoodDetails(meals);\n    };\n    fetchMeal();\n  }, [id]);\n\n  // Fetch para drinks recomendados\n  useEffect(() => {\n    const fetchRecommended = async () => {\n      const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n      const { drinks } = await response.json();\n\n      setRecommendedDrinks(drinks.slice(0, firstSixRecommendedCards));\n    };\n    fetchRecommended();\n  }, []);\n\n  if (!foodDetails.length || !recommendedDrinks.length) {\n    return <h2>Loading Recipe Details...</h2>;\n  }\n\n  // Renderizando os ingredientes com o método includes\n  if (foodDetails) {\n    Object.keys(foodDetails[0])\n      .forEach((key) => {\n        if (key.includes('strIngredient') && foodDetails[0][key]) {\n          const ingredientNumber = key.split('strIngredient')[1];\n          const measure = foodDetails[0][`strMeasure${ingredientNumber}`];\n          values.push(foodDetails[0][key]);\n          measures.push(measure);\n        }\n      });\n  }\n\n  const youtubeUrl = foodDetails[0].strYoutube.replace('watch?v=', 'embed/');\n\n  return (\n    <div className=\"details-container page-main\">\n      <img\n        src={ foodDetails[0].strMealThumb }\n        alt={ foodDetails[0].strMeal }\n        data-testid=\"recipe-photo\"\n        height=\"400px\"\n      />\n      <div>\n        <h3 data-testid=\"recipe-title\">{ foodDetails[0].strMeal }</h3>\n      </div>\n      <div className=\"buttons-container\">\n        <CopyButton />\n        <FavoriteButton />\n      </div>\n      <h4\n        data-testid=\"recipe-category\"\n        className=\"category-text\"\n      >\n        { foodDetails[0].strCategory }\n      </h4>\n      <div className=\"details-ingredients\">\n        <h3>Ingredients</h3>\n        <ul>\n          {\n            values.map((ingredient, index) => {\n              if (ingredient !== '' && ingredient !== null) {\n                return (\n                  <li\n                    key={ index }\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                  >\n                    { ingredient }\n                    { ' - ' }\n                    { measures[index] }\n                  </li>);\n              }\n              return null; // Pro lint não reclamar :(\n            })\n          }\n        </ul>\n      </div>\n      <div className=\"details-instruction\">\n        <h3>Instructions</h3>\n        <p data-testid=\"instructions\">{ foodDetails[0].strInstructions }</p>\n      </div>\n      <div>\n        <h3>Vídeo</h3>\n        <iframe\n          src={ youtubeUrl }\n          frameBorder=\"0\"\n          data-testid=\"video\"\n          title=\"recipe\"\n          allowFullScreen\n          ng-show=\"showvideo\"\n        />\n      </div>\n      <h3>Recomendations</h3>\n      <div className=\"flex carousel\">\n        {\n          recommendedDrinks.map((recommendations, index) => (\n            <div\n              key={ recommendations.idDrink }\n              data-testid={ `${index}-recomendation-card` }\n              className=\"recipe-card\"\n            >\n              <img\n                src={ recommendations.strDrinkThumb }\n                alt={ recommendations.strDrink }\n                height=\"150px\"\n              />\n              <p className=\"category-text\">{ recommendations.strCategory }</p>\n              <p\n                data-testid={ `${index}-recomendation-title` }\n              >\n                { recommendations.strDrink }\n              </p>\n            </div>\n          ))\n        }\n      </div>\n      <Link\n        to={ `/comidas/${id}/in-progress` }\n        data-testid=\"start-recipe-btn\"\n        className=\"details-button\"\n      >\n        <Button\n          variant=\"primary\"\n        >\n          Iniciar Receita\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default FoodDetails;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport isLocalFavorite, {\n  getFavoritesList,\n  localFavorite,\n} from '../services/utilities';\n\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport loading from '../images/loading.gif';\n\nfunction FavoriteButton() {\n  const [drinkDetails, setDrinkDetails] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clickOn, setClickOn] = useState(false);\n\n  const { id } = useParams();\n\n  // Fetch para detalhes de uma receita\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const { drinks } = await response.json();\n\n      setDrinkDetails(drinks);\n    };\n    fetchDrinks();\n  }, [id]);\n\n  const localIsFavorite = localStorage.getItem('isFavorite');\n\n  useMemo(() => {\n    isLocalFavorite(\n      localIsFavorite,\n      setIsFavorite,\n      id,\n    );\n  }, [localIsFavorite, id]);\n\n  if ((!drinkDetails.length)) {\n    return <img src={ loading } alt=\"loading\" />;\n  }\n\n  const drinkInfo = {\n    id: drinkDetails[0].idDrink,\n    type: 'bebida',\n    area: '',\n    category: drinkDetails[0].strCategory,\n    alcoholicOrNot: drinkDetails[0].strAlcoholic,\n    name: drinkDetails[0].strDrink,\n    image: drinkDetails[0].strDrinkThumb,\n  };\n\n  const recipeOnStorage = localFavorite.some((savedRecipe) => savedRecipe.id === id);\n\n  let index = '';\n  let updateStorage = '';\n\n  const handleFavorite = () => {\n    if (recipeOnStorage === false) { // fazer uma lógica usando o some e o map para comparar o id atual com a lista de ids salvos para ver se fica true ou false\n      setIsFavorite(true);\n      localStorage.setItem('isFavorite', !isFavorite);\n      getFavoritesList(drinkInfo);\n      setClickOn(false);\n    } else {\n      setIsFavorite(false);\n      localFavorite.forEach((recipe) => {\n        if (recipe.id === id) {\n          index = localFavorite.indexOf(recipe);\n          localFavorite.splice(index, 1);\n          updateStorage = JSON.stringify(localFavorite);\n          localStorage.setItem('favoriteRecipes', updateStorage);\n        }\n        setClickOn(false);\n      });\n    }\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outline-secondary\"\n        type=\"button\"\n        data-testid=\"favorite-btn\"\n        onClick={ handleFavorite }\n        src={\n          recipeOnStorage || clickOn\n            ? blackHeartIcon\n            : whiteHeartIcon\n        }\n      >\n        {\n          recipeOnStorage || clickOn\n            ? <img src={ blackHeartIcon } alt=\"Like button\" />\n            : <img src={ whiteHeartIcon } alt=\"Like button\" />\n        }\n      </Button>\n    </div>\n  );\n}\n\nexport default FavoriteButton;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport CopyButton from '../components/CopyButton';\nimport FavoriteButton from '../components/DrinkFavoriteButton';\n\nimport './RecipeDetails.css';\n\nfunction DrinkDetails() {\n  const [drinkDetails, setDrinkDetails] = useState([]);\n  const [recommendedFoods, setRecommendedFoods] = useState([]);\n\n  // No magic Numbers\n  const firstSixRecommendedCards = 6;\n\n  const values = []; // usar na renderização de ingredientes\n  const measures = []; // usar na renderização de medidas dos ingredientes\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const { drinks } = await response.json();\n\n      setDrinkDetails(drinks);\n    };\n    fetchDrinks();\n  }, [id]);\n\n  useEffect(() => {\n    // Fetch para comidas recomendadas\n    const fetchRecommended = async () => {\n      const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n      const { meals } = await response.json();\n\n      setRecommendedFoods(meals.slice(0, firstSixRecommendedCards));\n    };\n    fetchRecommended();\n  }, []);\n\n  if (!drinkDetails.length || !recommendedFoods.length) {\n    return <h2>Loading Recipe Details...</h2>;\n  }\n\n  // Renderizando os ingredientes com o método includes\n  if (drinkDetails) {\n    Object.keys(drinkDetails[0])\n      .forEach((key) => {\n        if (key.includes('strIngredient') && drinkDetails[0][key]) {\n          const ingredientNumber = key.split('strIngredient')[1];\n          const measure = drinkDetails[0][`strMeasure${ingredientNumber}`];\n          values.push(drinkDetails[0][key]);\n          measures.push(measure);\n        }\n      });\n  }\n\n  return (\n    <div className=\"details-container page-main\">\n      <div>\n        <img\n          src={ drinkDetails[0].strDrinkThumb }\n          alt={ drinkDetails[0].strDrink }\n          data-testid=\"recipe-photo\"\n          height=\"400px\"\n        />\n        <h3 data-testid=\"recipe-title\">{ drinkDetails[0].strDrink }</h3>\n      </div>\n      <div className=\"buttons-container\">\n        <CopyButton />\n        <FavoriteButton />\n      </div>\n      <h4\n        data-testid=\"recipe-category\"\n        className=\"category-text\"\n      >\n        { drinkDetails[0].strAlcoholic }\n      </h4>\n      <div className=\"details-ingredients\">\n        <div>\n          <h3>Ingredients</h3>\n          <ul>\n            {\n              values.map((ingredient, index) => {\n                if (ingredient !== '' && ingredient !== null) {\n                  return (\n                    <li\n                      key={ index }\n                      data-testid={ `${index}-ingredient-name-and-measure` }\n                    >\n                      { ingredient }\n                      { ' - ' }\n                      { measures[index] }\n                    </li>);\n                }\n                return null; // Pro lint não reclamar :(\n              })\n            }\n          </ul>\n        </div>\n        <div className=\"details-instruction\">\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">{ drinkDetails[0].strInstructions }</p>\n        </div>\n        <div>\n          <h3>Recomendations</h3>\n          <div className=\"flex carousel\">\n            {\n              recommendedFoods.map((recommendations, index) => (\n                <div\n                  key={ recommendations.idMeal }\n                  data-testid={ `${index}-recomendation-card` }\n                  className=\"recipe-card\"\n                >\n                  <img\n                    src={ recommendations.strMealThumb }\n                    alt={ recommendations.strMeal }\n                    height=\"150px\"\n                  />\n                  <p className=\"category-text\">{ recommendations.strCategory }</p>\n                  <p\n                    data-testid={ `${index}-recomendation-title` }\n                  >\n                    { recommendations.strMeal }\n                  </p>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n      <Link\n        to={ `/bebidas/${id}/in-progress` }\n        data-testid=\"start-recipe-btn\"\n        className=\"details-button\"\n      >\n        <Button\n          variant=\"primary\"\n        >\n          Iniciar Receita\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default DrinkDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport CopyButton from '../components/CopyButton';\nimport FavoriteButton from '../components/FoodFavoriteButton';\n\nimport './RecipeDetails.css';\n\nfunction FoodInProgress() {\n  const [FoodProgress, setFoodProgress] = useState([]);\n  const { id } = useParams();\n\n  const values = []; // usar na renderização de ingredientes\n  const measures = []; // usar na renderização de medidas dos ingredientes\n\n  // Fetch para determinada receita\n  useEffect(() => {\n    const fetchMeal = async () => {\n      const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const { meals } = await response.json();\n      setFoodProgress(meals);\n      // saveLocalStorage();\n    };\n    fetchMeal();\n  }, [id]);\n\n  if (!FoodProgress.length) {\n    return <h2>Loading Recipe Progress...</h2>;\n  }\n\n  // Renderizando os ingredientes com o método includes\n  if (FoodProgress) {\n    Object.keys(FoodProgress[0])\n      .forEach((key) => {\n        if (key.includes('strIngredient') && FoodProgress[0][key]) {\n          const ingredientNumber = key.split('strIngredient')[1];\n          const measure = FoodProgress[0][`strMeasure${ingredientNumber}`];\n          values.push(FoodProgress[0][key]);\n          measures.push(measure);\n        }\n      });\n  }\n\n  return (\n    <div className=\"details-container page-main\">\n      <img\n        src={ FoodProgress[0].strMealThumb }\n        alt={ `Imagem de ${FoodProgress[0].strMeal}` }\n        height=\"400px\"\n        data-testid=\"recipe-photo\"\n      />\n      <h3 data-testid=\"recipe-title\">{ FoodProgress[0].strMeal }</h3>\n      <div className=\"buttons-container\">\n        <CopyButton />\n        <FavoriteButton />\n      </div>\n      <h5 data-testid=\"recipe-category\">{ FoodProgress[0].strCategory }</h5>\n\n      <div className=\"details-ingredients\">\n        <h4>Ingredients</h4>\n        <ul>\n          {\n            values.map((ingredient, index) => {\n              if (ingredient !== '' && ingredient !== null) {\n                return (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                  >\n                    <label htmlFor={ index }>\n                      <input\n                        type=\"checkbox\"\n                        name={ ingredient }\n                        id={ index }\n                        defaultChecked\n                        onClick={ ({ target }) => !target.checked }\n                      />\n                      { ingredient }\n                      { ' - ' }\n                      { measures[index] }\n                    </label>\n                  </div>);\n              }\n              return null; // Pro lint não reclamar :(\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"details-instruction\">\n        <h4>Instructions</h4>\n        <p data-testid=\"instructions\">{ FoodProgress[0].strInstructions }</p>\n      </div>\n\n      <Link to=\"/receitas-feitas\">\n        <Button\n          type=\"button\"\n          className=\"details-button\"\n          variant=\"primary\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Tarefa\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default FoodInProgress;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport CopyButton from '../components/CopyButton';\nimport FavoriteButton from '../components/DrinkFavoriteButton';\n\nfunction DrinkInProgress() {\n  const [drinkProgress, setDrinkProgress] = useState([]);\n  const { id } = useParams();\n\n  // Fetch para detalhes de uma receita\n  useEffect(() => {\n    const fetchDrinks = async () => {\n      const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const { drinks } = await response.json();\n\n      setDrinkProgress(drinks);\n    };\n    fetchDrinks();\n  }, [id]);\n\n  if (!drinkProgress.length) {\n    return <h2>Loading Recipe Progress...</h2>;\n  }\n\n  const values = []; // usar na renderização de ingredientes\n  const measures = []; // usar na renderização de medidas dos ingredientes\n\n  // Renderizando os ingredientes com o método includes\n  if (drinkProgress) {\n    Object.keys(drinkProgress[0])\n      .forEach((key) => {\n        if (key.includes('strIngredient') && drinkProgress[0][key]) {\n          const ingredientNumber = key.split('strIngredient')[1];\n          const measure = drinkProgress[0][`strMeasure${ingredientNumber}`];\n          values.push(drinkProgress[0][key]);\n          measures.push(measure);\n        }\n      });\n  }\n\n  return (\n    <div className=\"details-container page-main\">\n      <img\n        src={ drinkProgress[0].strDrinkThumb }\n        alt={ `Imagem de ${drinkProgress[0].strDrink}` }\n        height=\"400px\"\n        data-testid=\"recipe-photo\"\n      />\n      <div>\n        <h3 data-testid=\"recipe-title\">{ drinkProgress[0].strDrink }</h3>\n\n        <div className=\"buttons-container\">\n          <CopyButton />\n          <FavoriteButton />\n        </div>\n      </div>\n      <h5 data-testid=\"recipe-category\">{ drinkProgress[0].strAlcoholic }</h5>\n\n      <div className=\"details-ingredients\">\n        <h4>Ingredients</h4>\n        <ul>\n          {\n            values.map((ingredient, index) => {\n              if (ingredient !== '' && ingredient !== null) {\n                return (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                  >\n                    <label htmlFor={ ingredient }>\n                      <input\n                        type=\"checkbox\"\n                        name={ ingredient }\n                        id={ ingredient }\n                        defaultChecked\n                        onClick={ ({ target }) => !target.checked }\n                      />\n                      { ingredient }\n                      { ' - ' }\n                      { measures[index] }\n                    </label>\n\n                  </div>);\n              }\n              return null; // Pro lint não reclamar :(\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"details-instruction\">\n        <h4>Instructions</h4>\n        <p data-testid=\"instructions\">{ drinkProgress[0].strInstructions }</p>\n      </div>\n\n      <Link to=\"/receitas-feitas\">\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          className=\"details-button\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar Tarefa\n        </Button>\n      </Link>\n\n    </div>\n  );\n}\nexport default DrinkInProgress;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction ExploreFoodByIngredient() {\n  const { foodIngredients,\n    memoizedHandleFetchFoodIngredients,\n    setSelectedFoodIngredient,\n  } = useContext(RecipesAppContext);\n\n  const doze = 12;\n\n  useEffect(() => {\n    memoizedHandleFetchFoodIngredients();\n  }, [memoizedHandleFetchFoodIngredients]);\n\n  if (foodIngredients.length === 0) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <div data-testid=\"explore-by-ingredient\" className=\"list-ingredients page-main\">\n      <Header titlePage=\"Explorar Ingredientes\" />\n      {foodIngredients.slice(0, doze).map((ingredient, index) => (\n        <Link\n          to=\"/comidas\"\n          key={ index }\n          onClick={ () => setSelectedFoodIngredient(ingredient.strIngredient) }\n        >\n          <div\n            className=\"card-ingredients\"\n            data-testid={ `${index}-ingredient-card` }\n            key={ ingredient.strIngredient }\n          >\n            <img\n              data-testid={ `${index}-card-img` }\n              src={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png` }\n              height=\"100px\"\n              alt={ `Imagem de ${ingredient.strIngredient}` }\n            />\n            <p data-testid={ `${index}-card-name` }>{ingredient.strIngredient}</p>\n          </div>\n        </Link>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodByIngredient;\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction ExploreDrinkByIngredient() {\n  const { drinkIngredients,\n    memoizedHandleFetchDrinkIngredients,\n    setSelectedDrinkIngredient,\n  } = useContext(RecipesAppContext);\n\n  const doze = 12;\n\n  useEffect(() => {\n    memoizedHandleFetchDrinkIngredients();\n  }, [memoizedHandleFetchDrinkIngredients]);\n\n  if (drinkIngredients.length === 0) {\n    return (<h1>Loading...</h1>);\n  }\n\n  return (\n    <div className=\"page-main\">\n      <Header titlePage=\"Explorar Ingredientes\" />\n      <div data-testid=\"explore-by-ingredient\">\n        {\n          drinkIngredients\n            .slice(0, doze).map((ingredient, index) => (\n              <Link\n                to=\"/bebidas\"\n                key={ index }\n                onClick={ () => setSelectedDrinkIngredient(ingredient.strIngredient1) }\n              >\n                <div\n                  className=\"card-ingredients\"\n                  data-testid={ `${index}-ingredient-card` }\n                  key={ ingredient.strIngredient1 }\n                >\n                  <img\n                    data-testid={ `${index}-card-img` }\n                    src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}-Small.png` }\n                    height=\"100px\"\n                    alt={ `Imagem de ${ingredient.strIngredient1}` }\n                  />\n                  <p data-testid={ `${index}-card-name` }>{ingredient.strIngredient1}</p>\n                </div>\n              </Link>\n            ))\n        }\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinkByIngredient;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderWithSearchFood from '../components/HeaderWithSearchFood';\nimport Footer from '../components/Footer';\nimport RecipesAppContext from '../context/RecipesAppContext';\n\nfunction ExploreFoodByOrigin() {\n  const {\n    foodOrigins,\n    memoizedHandleFetchFoodOrigins,\n    selectedFoodOrigin,\n    setSelectedFoodOrigin,\n  } = useContext(RecipesAppContext);\n\n  const [mealsByOrigin, setMealsByOrigin] = useState([]);\n\n  const MAX_ORIGINS = 27;\n  const MAX_CARDS = 12;\n\n  useEffect(() => {\n    memoizedHandleFetchFoodOrigins();\n  }, [memoizedHandleFetchFoodOrigins]);\n\n  useEffect(() => {\n    fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${selectedFoodOrigin}`)\n      .then((response) => response.json())\n      .then((result) => {\n        setMealsByOrigin(result.meals);\n      });\n  }, [selectedFoodOrigin]);\n\n  function handleChangeSelectedArea(event) {\n    setSelectedFoodOrigin(event.target.value);\n  }\n\n  if (foodOrigins.length === 0) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <div>\n      <HeaderWithSearchFood titlePage=\"Explorar Origem\" />\n      <div className=\"page-main\">\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ handleChangeSelectedArea }\n        >\n          <option\n            data-testid=\"All-option\"\n            value=\"All\"\n          >\n            All\n          </option>\n\n          {foodOrigins.slice(0, MAX_ORIGINS).map((area, index) => (\n            <option\n              data-testid={ `${area}-option` }\n              key={ index }\n              value={ area }\n            >\n              {area}\n            </option>\n          ))}\n        </select>\n\n        <div className=\"list-origin\">\n          {mealsByOrigin.map((meal, index) => (\n            <div\n              className=\"card-origin\"\n              // data-testid={ `${meal}-option` }\n              data-testid={ `${index}-card-name` }\n              key={ meal.strMeal }\n            >\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ meal.strMealThumb }\n                height=\"100px\"\n                alt={ `Imagem de ${meal.strMeal}` }\n                key={ index }\n              />\n              <Link to={ `/comidas/${meal.idMeal}` }>\n                <p data-testid={ `${index}-recipe-card` }>{meal.strMeal}</p>\n              </Link>\n              {console.log(meal)}\n            </div>\n          )).slice(0, MAX_CARDS)}\n        </div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default ExploreFoodByOrigin;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nimport './Profile.css';\n\nfunction Profile() {\n  const history = useHistory();\n  const [email, setEmail] = useState();\n\n  // verificação incluida após auxilio da mentoria teécnica\n  useEffect(() => {\n    if (localStorage.getItem('user')) {\n      setEmail(JSON.parse(localStorage.getItem('user')).email);\n    }\n  }, []);\n\n  // mudança na logica abaixo para o usseEffect.\n  // const jsonEmail = JSON.parse(localStorage.getItem('user'));\n  // const userEmail = jsonEmail.email;\n\n  function userLogout() {\n    localStorage.clear();\n    history.push('/');\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <Header titlePage=\"Perfil\" />\n      <div>\n        <h3 data-testid=\"profile-email\">{ email }</h3>\n        <Button\n          variant=\"secondary\"\n          type=\"button\"\n          data-testid=\"profile-done-btn\"\n          onClick={ () => history.push('/receitas-feitas') }\n        >\n          Receitas Feitas\n        </Button>\n        <Button\n          variant=\"secondary\"\n          type=\"button\"\n          data-testid=\"profile-favorite-btn\"\n          onClick={ () => history.push('/receitas-favoritas') }\n        >\n          Receitas Favoritas\n        </Button>\n        <Button\n          variant=\"secondary\"\n          type=\"button\"\n          data-testid=\"profile-logout-btn\"\n          onClick={ userLogout }\n        >\n          Sair\n        </Button>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport Header from '../components/Header';\n\nfunction DoneRecipes() {\n  return (\n    <div>\n      <Header titlePage=\"Receitas Feitas\" />\n    </div>\n  );\n}\n\nexport default DoneRecipes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'react-bootstrap';\n\nimport {\n  localFavorite,\n} from '../services/utilities';\n\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FavoriteButton({ testIndex, id, name }) {\n  let index = '';\n  let updateStorage = '';\n\n  const handleFavorite = () => {\n    localFavorite.forEach((recipe) => {\n      if (recipe.id === id && recipe.name === name) {\n        // console.log(recipe.id);\n        index = localFavorite.indexOf(recipe);\n        localFavorite.splice(index, 1);\n        updateStorage = JSON.stringify(localFavorite);\n        localStorage.setItem('favoriteRecipes', updateStorage);\n      }\n    });\n    window.location.reload();\n  };\n\n  return (\n    <Button\n      variant=\"outline-secondary\"\n      data-testid={ `${testIndex}-horizontal-favorite-btn` }\n      src={ blackHeartIcon }\n      onClick={ handleFavorite }\n      type=\"button\"\n    >\n      <img src={ blackHeartIcon } alt=\"Like button\" />\n    </Button>\n  );\n}\n\nexport default FavoriteButton;\n\nFavoriteButton.propTypes = {\n  testIndex: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'react-bootstrap';\n\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction CopyButton({ recipe, index }) {\n  const [copiedUrl, setCopiedUrl] = useState(false);\n  // No magic Numbers\n  const oneSecondDisplayCopiedLink = 1000;\n\n  const copiedUrlMessage = <p>Link copiado!</p>;\n\n  return (\n    <div>\n      <Button\n        variant=\"outline-secondary\"\n        type=\"button\"\n        onClick={ () => {\n          navigator\n            .clipboard\n            .writeText(\n              `${window.location.origin}/${recipe.type}s/${recipe.id}`,\n            );\n          setCopiedUrl(true);\n          setTimeout(() => setCopiedUrl(false), oneSecondDisplayCopiedLink);\n        } }\n        src={ shareIcon }\n        data-testid={ `${index}-horizontal-share-btn` }\n      >\n        <img src={ shareIcon } alt=\"share button\" />\n      </Button>\n      {copiedUrl && copiedUrlMessage}\n    </div>\n  );\n}\n\nexport default CopyButton;\n\nCopyButton.propTypes = {\n  recipe: PropTypes.string.isRequired,\n  index: PropTypes.string.isRequired,\n};\n","import React, { useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\n\nimport Header from '../components/Header';\nimport {\n  foodsPlusDrinks,\n  localFavorite,\n  drinks,\n  foods,\n} from '../services/utilities';\nimport FavoriteButton from '../mini-components/FavScreenRemoveButton';\nimport CopyButton from '../mini-components/FavScreenCopyButton';\n\nimport './RecipeDetails.css';\n\nfunction FavoriteRecipes() {\n  const [filterButton, setFilterButton] = useState('All');\n\n  useMemo(() => {\n    localFavorite.forEach((recipe) => {\n      foodsPlusDrinks.push(recipe);\n\n      if (recipe.type === 'bebida') {\n        drinks.push(recipe);\n      }\n\n      if (recipe.type === 'comida') {\n        foods.push(recipe);\n      }\n    });\n  }, []);\n\n  function filterByButton() {\n    if (filterButton === 'All') {\n      return (\n        <div className=\"details-container\">\n          {\n            foodsPlusDrinks.map((recipe, index) => (\n              <div key={ index }>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <img\n                    src={ recipe.image }\n                    alt={ recipe.name }\n                    data-testid={ `${index}-horizontal-image` }\n                    height=\"150px\"\n                  />\n                </Link>\n                <h4\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { recipe.area }\n                  { ' - ' }\n                  { recipe.category }\n                  { ' ' }\n                  { recipe.alcoholicOrNot }\n                </h4>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <h4 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h4>\n                </Link>\n                <div className=\"buttons-container\">\n                  <CopyButton recipe={ recipe } index={ index } />\n                  <FavoriteButton\n                    testIndex={ index }\n                    id={ recipe.id }\n                    name={ recipe.name }\n                  />\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      );\n    } if (filterButton === 'Drinks') {\n      return (\n        <div className=\"details-container\">\n          {\n            drinks.map((recipe, index) => (\n              <div key={ recipe.name }>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <img\n                    src={ recipe.image }\n                    alt={ recipe.name }\n                    data-testid={ `${index}-horizontal-image` }\n                    height=\"150px\"\n                  />\n                </Link>\n                <h4\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { recipe.category }\n                </h4>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <h4 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h4>\n                </Link>\n                <div className=\"buttons-container\">\n                  <CopyButton recipe={ recipe } index={ index } />\n                  <FavoriteButton recipe={ recipe } testIndex={ index } />\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      );\n    } if (filterButton === 'Foods') {\n      return (\n        <div className=\"details-container\">\n          {\n            foods.map((recipe, index) => (\n              <div key={ index }>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <img\n                    src={ recipe.image }\n                    alt={ recipe.name }\n                    data-testid={ `${index}-horizontal-image` }\n                    height=\"151px\"\n                  />\n                </Link>\n                <h4\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { recipe.category }\n                </h4>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <h4 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h4>\n                </Link>\n                <div className=\"buttons-container\">\n                  <CopyButton recipe={ recipe } index={ index } />\n                  <FavoriteButton recipe={ recipe } testIndex={ index } />\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"favorite-container\">\n      <Header titlePage=\"Receitas Favoritas\" />\n      <div className=\"fav-filterbuttons\">\n        <Button\n          variant=\"secondary\"\n          type=\"button\"\n          data-testid=\"filter-by-all-btn\"\n          onClick={ () => setFilterButton('All') }\n        >\n          All\n        </Button>\n\n        <Button\n          variant=\"secondary\"\n          type=\"button\"\n          data-testid=\"filter-by-food-btn\"\n          onClick={ () => setFilterButton('Foods') }\n        >\n          Foods\n        </Button>\n\n        <Button\n          variant=\"secondary\"\n          type=\"button\"\n          data-testid=\"filter-by-drink-btn\"\n          onClick={ () => setFilterButton('Drinks') }\n        >\n          Drinks\n        </Button>\n      </div>\n      { filterByButton() }\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>Not Found</div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport RecipesAppProvider from './context/RecipesAppProvider';\n\nimport Login from './pages/Login';\nimport Food from './pages/Food';\nimport Drink from './pages/Drink';\nimport Explore from './pages/Explore';\nimport ExploreFood from './pages/ExploreFood';\nimport ExploreDrink from './pages/ExploreDrink';\nimport FoodDetails from './pages/FoodDetails';\nimport DrinkDetails from './pages/DrinkDetails';\nimport FoodInProgress from './pages/FoodInProgress';\nimport DrinkInProgress from './pages/DrinkInProgress';\nimport ExploreFoodByIngredient from './pages/ExploreFoodByIngredient';\nimport ExploreDrinkByIngredient from './pages/ExploreDrinkByIngredient';\nimport ExploreFoodByOrigin from './pages/ExploreFoodByOrigin';\nimport Profile from './pages/Profile';\nimport DoneRecipes from './pages/DoneRecipes';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport NotFound from './pages/NotFound';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router basename={ process.env.PUBLIC_URL }>\n      <RecipesAppProvider>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/comidas\" component={ Food } />\n          <Route exact path=\"/bebidas\" component={ Drink } />\n          <Route exact path=\"/explorar\" component={ Explore } />\n          <Route exact path=\"/explorar/comidas\" component={ ExploreFood } />\n          <Route exact path=\"/explorar/bebidas\" component={ ExploreDrink } />\n          <Route\n            exact\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExploreFoodByIngredient }\n          />\n          <Route\n            exact\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExploreDrinkByIngredient }\n          />\n          <Route\n            exact\n            path=\"/explorar/comidas/area\"\n            component={ ExploreFoodByOrigin }\n          />\n          <Route exact path=\"/comidas/:id\" component={ FoodDetails } />\n          <Route exact path=\"/bebidas/:id\" component={ DrinkDetails } />\n          <Route\n            exact\n            path=\"/bebidas/:id/in-progress\"\n            component={ DrinkInProgress }\n          />\n          <Route\n            exact\n            path=\"/comidas/:id/in-progress\"\n            component={ FoodInProgress }\n          />\n\n          <Route\n            exact\n            path=\"/receitas-feitas\"\n            component={ DoneRecipes }\n          />\n          <Route\n            exact\n            path=\"/receitas-favoritas\"\n            component={ FavoriteRecipes }\n          />\n          <Route\n            exact\n            path=\"/perfil\"\n            component={ Profile }\n          />\n          <Route\n            exact\n            path=\"/explorar/bebidas/area\"\n            component={ NotFound }\n          />\n        </Switch>\n      </RecipesAppProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './Redux/Store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}